@model PaginatedList<HallodocServices.ModelView.NewState>


<div class="table-responsive d-none d-lg-flex" style="width:100%">
    <table class="table" id="tableID" style="width:100%">
        <thead class="table-light">
            <tr>
                <th scope="col">Name</th>
                <th scope="col"></th>
                <th scope="col">Phone</th>
                <th scope="col">Address</th>
                <th scope="col">Chat with</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>



        <tbody>


            @foreach (var item in Model)
            {

                if (Model != null)
                {
                    <!-- Modal -->
                    <!-- Modal -->
                    <!-- Modal -->
                }

                string backcolor;
                @if (@item.RequestTypeId == 1)
                {
                    backcolor = "table-success";
                }
                else if (item.RequestTypeId == 2)
                {
                    backcolor = "table-warning";
                }
                else if (item.RequestTypeId == 3)
                {
                    backcolor = "table-primary";
                }
                else if (item.RequestTypeId == 4)
                {
                    backcolor = "table-danger";
                }
                else
                {
                    backcolor = "table-success";
                }
                <tr class="@backcolor hide">
                    <td>@Html.DisplayFor(modelItem => item.FirstName),@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td><button type="button" class="btn btn-outline-light"><i class="bi bi-envelope"></i></button></td>

                    <td><button type="button" class="btn btn-outline-light"><i class="bi bi-telephone"></i>@Html.DisplayFor(modelItem => item.Mobile)</button></td>
                    <td>@Html.DisplayFor(modelItem => item.Street),@Html.DisplayFor(modelItem => item.City),@Html.DisplayFor(modelItem => item.State)</td>


                    <td><button type="button" class="btn btn-outline-light"><i class="bi bi-person"></i>Admin</button></td>
                    <td>
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-light" data-bs-toggle="dropdown" aria-expanded="false">
                                Action
                            </button>
                            <ul class="dropdown-menu">

                                <li><a class="dropdown-item" asp-controller="AdminSite" asp-action="ViewCase" asp-route-rcid=@item.id><i class="bi bi-card-list"></i> View Case</a></li>
                                <li><a class="dropdown-item" asp-controller="AdminSite" asp-action="ViewNotes" asp-route-reqid="@item.RequestId"><i class="bi bi-book"></i> View Notes</a></li>
                                <li><a class="dropdown-item" asp-controller="Provider" asp-action="ConcludeCare" asp-route-RequestId="@item.RequestId"><i class="bi bi-check-lg"></i> ConClude Care</a></li>
                            </ul>
                        </div>
                    </td>
                </tr>

            }









    </table>

</div>


<div class="d-flex d-lg-none">
    <div class="accordion" id="accordionExample" style="width:100%">



        @foreach (var item in Model)
        {

            string circlecolor, name;
            @if (item.RequestTypeId == 1)
            {
                circlecolor = "green";
                name = "patient";
            }
            else if (item.RequestTypeId == 2)
            {
                circlecolor = "yellow";
                name = "Family/friend";
            }
            else if (item.RequestTypeId == 3)
            {
                circlecolor = "blue";
                name = "Conceirge";
            }
            else
            {
                circlecolor = "red";
                name = "Business";
            }


            <div class="accordion-item">

                <h2 class="accordion-header">
                    <div class="accordion-button collapsed " type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Html.DisplayFor(modelItem => item.id)" aria-expanded="false" aria-controls="collapseOne" style="display:block">
                        <div class="row mt-2" style="width:100%">
                            <div class="col-6">
                                @Html.DisplayFor(modelItem => item.FirstName),@Html.DisplayFor(modelItem => item.LastName)
                            </div>
                            <div class="col-6 d-flex" style="justify-content:end">
                                @name <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="@circlecolor" class="bi bi-circle-fill" viewBox="0 0 16 16">
                                    <circle cx="8" cy="8" r="8" />
                                </svg>
                            </div>
                        </div>
                        <div class="row  mt-2" style="width:100%">

                            <div class="col-6 d-flex" style="justify-content:end">
                                <button type="button" class="btn btn-outline-info rounded-pill">Map Location</button>
                            </div>
                        </div>

                    </div>
                </h2>
                <div id="collapse-@Html.DisplayFor(modelItem => item.id)" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="w-100">
                            <a asp-controller="AdminSite" asp-action="ViewCase" asp-route-rcid=@item.id>
                                <button type="button" class="btn btn-light  vwbtn rounded-pill" style="color:#6610f2; border-color:#6610f2">
                                    View Case
                                </button>
                            </a>
                        </div>




                        <div class="row  mt-2">
                            <div class="col">
                                <button type="button" class="btn btn-outline-info rounded-circle"><i class="bi bi-telephone"></i></button>Patient: @Html.DisplayFor(modelItem => item.Mobile)
                            </div>
                        </div>


                        <div class="row  mt-2">
                            <div class="col-6">
                                <a asp-controller="AdminSite" asp-action="ViewNotes" asp-route-reqid="@item.RequestId"> <button type="button" class="btn btn-success w-100 rounded-pill">View Notes</button> </a>
                            </div>
                            <div class="col-6">
                                <button type="button" class="btn btn-danger w-100 rounded-pill">Accept</button>
                            </div>
                        </div>
                        <div class="row  mt-2">
                            <div class="col-6">
                                <button type="button" class="btn btn-success w-100 rounded-pill">Email</button>
                            </div>
                        </div>

                    </div>

                </div>
            </div>


        }

    </div>
</div>

<ul class="pagination">
@if (Model.HasPrevious)
{
    <li class="page-item " onclick="GetStatus(4,@(Model.CurrentPage-1),0)"><button class="page-link">Previous</button></li>
}
else
{
    <li class="page-item disabled"><button class="page-link">Previous</button></li>
}
@if (Model.TotalPages < 6)
{
    for (var i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(Model.CurrentPage==i?"active":"")" onclick="GetStatus(4,@i,0)"><button class="page-link">@i</button></li>
    }
}
else
{
    <li class="page-item @(Model.CurrentPage > 2 ? "" :"d-none")" onclick="GetStatus(4,1,0)"><button class="page-link">1</button></li>
    <li class="page-item disabled @(Model.CurrentPage > 3 ? "": "d-none")"><button class="page-link">...</button></li>
    @if (Model.CurrentPage > 1 && Model.CurrentPage < Model.TotalPages)
    {
        <li class="page-item" onclick="GetStatus(4,@(Model.CurrentPage-1),0)"><button class="page-link">@(Model.CurrentPage - 1)</button></li>
        <li class="page-item active" onclick="GetStatus(4,@(Model.CurrentPage),0)"><button class="page-link">@Model.CurrentPage</button></li>
        <li class="page-item" onclick="GetStatus(4,@(Model.CurrentPage+1),0)"><button class="page-link">@(Model.CurrentPage + 1)</button></li>
    }
    @if (Model.CurrentPage == 1)
    {
        <li class="page-item  active" onclick="GetStatus(4,1,0)"><button class="page-link">1</button></li>
        <li class="page-item" onclick="GetStatus(4,2,0)"><button class="page-link">2</button></li>
        <li class="page-item" onclick="GetStatus(4,3,0)"><button class="page-link">3</button></li>
    }
    @if (Model.CurrentPage == Model.TotalPages)
    {
        <li class="page-item" onclick="GetStatus(4,@(Model.TotalPages-2),0)"><button class="page-link">@(Model.TotalPages - 2)</button></li>
        <li class="page-item" onclick="GetStatus(4,@(Model.TotalPages-1),0)"><button class="page-link">@(Model.TotalPages - 1)</button></li>
        <li class="page-item active" onclick="GetStatus(4,@(Model.TotalPages),0)"><button class="page-link">@Model.TotalPages</button></li>
    }
    <li class="page-item disabled @(Model.CurrentPage < Model.TotalPages-2? "" : "d-none")"><button class="page-link">...</button></li>
    <li class="page-item @(Model.CurrentPage<Model.TotalPages-1? "" :"d-none")" onclick="GetStatus(4,@(Model.TotalPages),0)"><button class="page-link">@Model.TotalPages</button></li>
}
@if (Model.HasNext)
{
    <li class="page-item " onclick="GetStatus(4,@(Model.CurrentPage+1),0)"><button class="page-link">Next</button></li>
}
else
{
    <li class="page-item disabled"><button class="page-link">Next</button></li>
}
</ul>

