@model PaginatedList<HallodocServices.ModelView.NewState>






<div class="table-responsive d-none d-lg-flex">
    <table class="table table-hover" >
        <thead class="table-light">
            <tr>
                <th scope="col">Name</th>
                <th scope="col"></th>
                <th scope="col">Physician Name</th>
                <th scope="col">Date of Service</th>
                <th scope="col">Phone</th>
                <th scope="col">Address</th>
                <th scope="col">Chat with</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <input type="hidden" id="admin-chat-@item.RequestId" value="@item.RecieverId">
                <input type="hidden" id="patient-chat-@item.RequestId" value="@item.UserId">
                <input type="hidden" id="provider-photo-@item.RequestId" value="@item.providerPhoto" />
                string backcolor;
                @if (@item.RequestTypeId == 1)
                {
                    backcolor = "table-success";
                }
                else if (item.RequestTypeId == 2)
                {
                    backcolor = "table-warning";
                }
                else if (item.RequestTypeId == 3)
                {
                    backcolor = "table-primary";
                }
                else if (item.RequestTypeId == 4)
                {
                    backcolor = "table-danger";
                }
                else
                {
                    backcolor = "table-success";
                }
                <tr class="@backcolor">
                    <td>@Html.DisplayFor(modelItem => item.FirstName),@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td><button type="button" class="btn btn-outline-light"><i class="bi bi-envelope"></i></button></td>
                    <td>@Html.DisplayFor(modelItem => item.physicianName)</td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                    <td><button type="button" class="btn btn-outline-light"><i class="bi bi-telephone"></i>@Html.DisplayFor(modelItem => item.Mobile)</button></td>
                    <td>@Html.DisplayFor(modelItem => item.Street),@Html.DisplayFor(modelItem => item.City),@Html.DisplayFor(modelItem => item.State)</td>
                    <td>
                        <div class="d-flex">
                            <button type="button" class="btn btn-outline-light mx-1" data-bs-toggle="offcanvas" data-bs-target="#chat" aria-controls="offcanvasExample" onclick="chatPatient(@item.RequestId)"><i class="bi bi-person"></i>Patient</button>
                            @if (item.RecieverId != 0)
                            {
                                <button type="button" class="btn btn-outline-light mx-1" data-bs-toggle="offcanvas" data-bs-target="#chat" aria-controls="offcanvasExample" onclick="chat(@item.RequestId)"><i class="bi bi-person"></i>Provider</button>
                            }

                        </div>
                    </td>
                    <td>
                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-light" data-bs-toggle="dropdown" aria-expanded="false">
                                Action
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" asp-controller="AdminSite" asp-action="ViewCase" asp-route-rcid=@item.id><i class="bi bi-card-list"></i> View Case</a></li>
                                <li><a class="dropdown-item" asp-controller="AdminSite" asp-action="ViewUploads" asp-route-reqID="@item.RequestId"><i class="bi bi-cloud-arrow-up"></i> View Uploads</a></li>
                                <li><a class="dropdown-item" asp-controller="AdminSite" asp-action="ViewNotes" asp-route-reqid="@item.RequestId"><i class="bi bi-book"></i> View Notes</a></li>
                            </ul>
                        </div>
                    </td>
                </tr>

            }




        </tbody>
    </table>

    </div>


    <div class="d-flex d-lg-none">
        <div class="accordion" id="accordionExample" style="width:100%">



            @foreach (var item in Model)
            {

                string circlecolor, name;
                @if (item.RequestTypeId == 1)
                {
                    circlecolor = "green";
                    name = "patient";
                }
                else if (item.RequestTypeId == 2)
                {
                    circlecolor = "yellow";
                    name = "Family/friend";
                }
                else if (item.RequestTypeId == 3)
                {
                    circlecolor = "blue";
                    name = "Conceirge";
                }
                else
                {
                    circlecolor = "red";
                    name = "Business";
                }


                <div class="accordion-item">

                    <h2 class="accordion-header">
                        <div class="accordion-button collapsed " type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@Html.DisplayFor(modelItem => item.id)" aria-expanded="false" aria-controls="collapseOne" style="display:block">
                            <div class="row mt-2" style="width:100%">
                                <div class="col-6">
                                    @Html.DisplayFor(modelItem => item.FirstName),@Html.DisplayFor(modelItem => item.LastName)
                                </div>
                                <div class="col-6 d-flex" style="justify-content:end">
                                    @name <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="@circlecolor" class="bi bi-circle-fill" viewBox="0 0 16 16">
                                        <circle cx="8" cy="8" r="8" />
                                    </svg>
                                </div>
                            </div>
                            <div class="row  mt-2" style="width:100%">
                                <div class="col-6">
                                    @item.regionName
                                </div>
                                <div class="col-6 d-flex" style="justify-content:end">
                                    <button type="button" class="btn btn-outline-info rounded-pill">Map Location</button>
                                </div>
                            </div>
                            <div class="row  mt-2 mb-3">
                                <div class="col">
                                    wait time: @Html.DisplayFor(modelItem => item.CreatedDate)
                                </div>
                            </div>
                        </div>
                    </h2>
                    <div id="collapse-@Html.DisplayFor(modelItem => item.id)" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <div class="w-100">
                                <a asp-controller="AdminSite" asp-action="ViewCase" asp-route-rcid=@item.id>
                                    <button type="button" class="btn btn-light  vwbtn rounded-pill" style="color:#6610f2; border-color:#6610f2">
                                        View Case
                                    </button>
                                </a>
                            </div>

                            <div class="row  mt-2">
                                <div class="col">
                                    <button type="button" class="btn btn-outline-info rounded-circle"><i class="bi bi-envelope"></i></button>Email: @Html.DisplayFor(modelItem => item.Email)
                                </div>
                            </div>

                            <div class="row  mt-2">
                                <div class="col">
                                    <button type="button" class="btn btn-outline-info rounded-circle"><i class="bi bi-telephone"></i></button>Patient: @Html.DisplayFor(modelItem => item.Mobile)
                                </div>
                            </div>
                            
                            <div class="row mt-2">
                                <div class="col">
                                    <button type="button" class="btn btn-outline-info rounded-circle"><i class="bi bi-calendar"></i></button> Date of Service:@Html.DisplayFor(modelItem => item.CreatedDate)
                                </div>
                            </div>
                            <div class="row  mt-2">
                                <div class="col">
                                    <button type="button" class="btn btn-outline-info rounded-circle"><i class="bi bi-person"></i></button>Physician:@Html.DisplayFor(modelItem => item.physicianName)
                                </div>
                            </div>
                            
                            <div class="row  mt-2">
                                <div class="col-6">
                                    <a asp-controller="AdminSite" asp-action="ViewNotes" asp-route-reqid="@item.RequestId"> <button type="button" class="btn btn-success w-100 rounded-pill">View Notes</button> </a>
                                </div>
                                <div class="col-6">
                                    <a asp-controller="AdminSite" asp-action="ViewUploads" asp-route-reqID="@item.RequestId"> <button type="button" class="btn btn-success w-100 rounded-pill">View Uploads</button> </a>
                                </div>
                            </div>
               
                            <div class="row mt-2 mb-3">
                                <div class="col-6">
                                    <button type="button" class="btn btn-success w-100 rounded-pill">Email</button>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end mb-2">
                                <div class="mx-1" style="padding-top:5px;">Chat with:</div> <button type="button" class="btn btn-outline-info mx-1"><i class="bi bi-person"></i> Patient</button><button type="button" class="btn btn-outline-info mx-1"><i class="bi bi-person"></i>  Provider</button>

                            </div>
                        </div>

                    </div>
                </div>


            }

        </div>
    </div>





@if(Model.TotalCount>0)
{
<ul class="pagination">
    @if (Model.HasPrevious)
    {
            <li class="page-item " onclick="GetStatus(6,@(Model.CurrentPage-1),0)"><button class="page-link"><i class="bi bi-chevron-left"></i></button></li>
    }
    else
    {
            <li class="page-item disabled"><button class="page-link"><i class="bi bi-chevron-left"></i></button></li>
    }
    @if (Model.TotalPages < 6)
    {
        for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage==i?"active":"")" onclick="GetStatus(6,@i,0)"><button class="page-link">@i</button></li>
        }
    }
    else
    {
        <li class="page-item @(Model.CurrentPage > 2 ? "" :"d-none")" onclick="GetStatus(6,1,0)"><button class="page-link">1</button></li>
        <li class="page-item disabled @(Model.CurrentPage > 3 ? "": "d-none")"><button class="page-link">...</button></li>
        @if (Model.CurrentPage > 1 && Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item" onclick="GetStatus(6,@(Model.CurrentPage-1),0)"><button class="page-link">@(Model.CurrentPage - 1)</button></li>
            <li class="page-item active" onclick="GetStatus(6,@(Model.CurrentPage),0)"><button class="page-link">@Model.CurrentPage</button></li>
            <li class="page-item" onclick="GetStatus(6,@(Model.CurrentPage+1),0)"><button class="page-link">@(Model.CurrentPage + 1)</button></li>
        }
        @if (Model.CurrentPage == 1)
        {
            <li class="page-item  active" onclick="GetStatus(6,1,0)"><button class="page-link">1</button></li>
            <li class="page-item" onclick="GetStatus(6,2,0)"><button class="page-link">2</button></li>
            <li class="page-item" onclick="GetStatus(6,3),0"><button class="page-link">3</button></li>
        }
        @if (Model.CurrentPage == Model.TotalPages)
        {
            <li class="page-item" onclick="GetStatus(6,@(Model.TotalPages-2),0)"><button class="page-link">@(Model.TotalPages - 2)</button></li>
            <li class="page-item" onclick="GetStatus(6,@(Model.TotalPages-1),0)"><button class="page-link">@(Model.TotalPages - 1)</button></li>
            <li class="page-item active" onclick="GetStatus(6,@(Model.TotalPages),0)"><button class="page-link">@Model.TotalPages</button></li>
        }
        <li class="page-item disabled @(Model.CurrentPage < Model.TotalPages-2? "" : "d-none")"><button class="page-link">...</button></li>
        <li class="page-item @(Model.CurrentPage<Model.TotalPages-1? "" :"d-none")" onclick="GetStatus(6,@(Model.TotalPages),0)"><button class="page-link">@Model.TotalPages</button></li>
    }
    @if (Model.HasNext)
    {
            <li class="page-item " onclick="GetStatus(6,@(Model.CurrentPage+1),0)"><button class="page-link"><i class="bi bi-chevron-right"></i></button></li>
    }
    else
    {
            <li class="page-item disabled"><button class="page-link"><i class="bi bi-chevron-right"></i></button></li>
    }
</ul>
}



